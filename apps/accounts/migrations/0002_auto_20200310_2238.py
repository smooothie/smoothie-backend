# Generated by Django 3.0.4 on 2020-03-10 20:38

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('counterparties', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='loan',
            name='bank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='counterparties.Bank'),
        ),
        migrations.AddField(
            model_name='deposit',
            name='bank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='counterparties.Bank'),
        ),
        migrations.AddField(
            model_name='counterpartyaccount',
            name='counterparty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='accounts', to='counterparties.Counterparty'),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='bank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='counterparties.Bank'),
        ),
        migrations.AddConstraint(
            model_name='account',
            constraint=models.UniqueConstraint(fields=('user', 'name'), name='account_unique_user_name'),
        ),
        migrations.AddConstraint(
            model_name='account',
            constraint=models.UniqueConstraint(condition=models.Q(item_type__in=['spendingbalance', 'incomebalance']), fields=('user', 'item_type', 'balance_currency'), name='unique_user_item_type'),
        ),
        migrations.AddConstraint(
            model_name='account',
            constraint=models.CheckConstraint(check=models.Q(balance__gte=django.db.models.expressions.CombinedExpression(django.db.models.expressions.Value(0), '-', django.db.models.expressions.F('credit_limit'))), name='check_balance'),
        ),
        migrations.AddConstraint(
            model_name='account',
            constraint=models.CheckConstraint(check=models.Q(('credit_limit', 0), models.Q(_negated=True, item_type__in=['cashaccount', 'deposit']), _connector='OR'), name='positive_balance_debit'),
        ),
    ]
